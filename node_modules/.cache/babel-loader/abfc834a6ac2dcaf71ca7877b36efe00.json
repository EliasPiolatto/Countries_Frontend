{"ast":null,"code":"/* eslint-disable no-unreachable */\nimport axios from 'axios';\nimport { ERROR, GET_ACTIVITIES, GET_BY_ID, GET_BY_NAME, GET_COUNTRIES } from './constantes';\nexport function getCountries() {\n  try {\n    return async function (dispatch) {\n      return await axios.get('/countries').then(resp => {\n        dispatch({\n          type: GET_COUNTRIES,\n          payload: resp.data\n        });\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport function getActivities() {\n  return async function (dispatch) {\n    try {\n      await axios.get('/activities').then(res => {\n        return dispatch({\n          type: GET_ACTIVITIES,\n          payload: res.data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getByName(name) {\n  return async function (dispatch) {\n    try {\n      return await axios.get(`/countries?name=${name}`).then(resp => {\n        dispatch({\n          type: GET_BY_NAME,\n          payload: resp.data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n      return dispatch({\n        type: ERROR,\n        payload: error.response.data.message\n      });\n    }\n  };\n}\n;\nexport function getByID(id) {\n  try {\n    return async function (dispatch) {\n      return await axios.get(`/countries/${id}`).then(resp => {\n        dispatch({\n          type: GET_BY_ID,\n          payload: resp.data\n        });\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport function postActivity(input) {\n  return async function () {\n    return await axios.post('/activities', input);\n  };\n}\n;","map":{"version":3,"names":["axios","ERROR","GET_ACTIVITIES","GET_BY_ID","GET_BY_NAME","GET_COUNTRIES","getCountries","dispatch","get","then","resp","type","payload","data","error","console","log","getActivities","res","getByName","name","response","message","getByID","id","postActivity","input","post"],"sources":["C:/Users/Gamer/Desktop/Countries_Frontend/client/src/Redux/actions/actions.js"],"sourcesContent":["/* eslint-disable no-unreachable */\r\nimport axios from 'axios';\r\nimport {ERROR, GET_ACTIVITIES, GET_BY_ID, GET_BY_NAME, GET_COUNTRIES} from './constantes';\r\n\r\n\r\n\r\nexport function getCountries(){\r\n    try {\r\n    return async function(dispatch){\r\n        return await axios.get('/countries')\r\n        .then(resp => {\r\n            dispatch({\r\n                type: GET_COUNTRIES,\r\n                payload: resp.data\r\n            })\r\n        })\r\n    } \r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\nexport function getActivities(){\r\n    return async function(dispatch){\r\n        try {\r\n        \r\n        await axios.get('/activities')\r\n        .then(res=> {\r\n            return dispatch({\r\n                type: GET_ACTIVITIES,\r\n                payload: res.data\r\n            })\r\n        })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getByName(name){\r\n    return async function(dispatch){\r\n        try {\r\n        return await axios.get(`/countries?name=${name}`)\r\n        .then(resp => {\r\n            dispatch({\r\n                type: GET_BY_NAME,\r\n                payload: resp.data\r\n            })\r\n        })\r\n    } catch (error) {\r\n      console.log(error);\r\n        return dispatch({\r\n          type: ERROR,\r\n          payload: error.response.data.message\r\n        });\r\n      }\r\n    }\r\n};\r\n\r\n\r\nexport function getByID(id){\r\n    try {\r\n    return async function(dispatch){\r\n        return await axios.get(`/countries/${id}`)\r\n        .then(resp => {\r\n            dispatch({\r\n                type: GET_BY_ID,\r\n                payload: resp.data\r\n            })\r\n        })\r\n    }  \r\n    } catch (error) {\r\n        console.log(error); \r\n    }\r\n};\r\n\r\n\r\nexport function postActivity(input) {\r\n    return async function () {       \r\n        return await axios.post('/activities', input);    \r\n    }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,EAAEC,cAAc,EAAEC,SAAS,EAAEC,WAAW,EAAEC,aAAa,QAAO,cAAc;AAIzF,OAAO,SAASC,YAAY,GAAE;EAC1B,IAAI;IACJ,OAAO,gBAAeC,QAAQ,EAAC;MAC3B,OAAO,MAAMP,KAAK,CAACQ,GAAG,CAAC,YAAY,CAAC,CACnCC,IAAI,CAACC,IAAI,IAAI;QACVH,QAAQ,CAAC;UACLI,IAAI,EAAEN,aAAa;UACnBO,OAAO,EAAEF,IAAI,CAACG;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;EAED,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ;AAAC;AAGD,OAAO,SAASG,aAAa,GAAE;EAC3B,OAAO,gBAAeV,QAAQ,EAAC;IAC3B,IAAI;MAEJ,MAAMP,KAAK,CAACQ,GAAG,CAAC,aAAa,CAAC,CAC7BC,IAAI,CAACS,GAAG,IAAG;QACR,OAAOX,QAAQ,CAAC;UACZI,IAAI,EAAET,cAAc;UACpBU,OAAO,EAAEM,GAAG,CAACL;QACjB,CAAC,CAAC;MACN,CAAC,CAAC;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL;AAGA,OAAO,SAASK,SAAS,CAACC,IAAI,EAAC;EAC3B,OAAO,gBAAeb,QAAQ,EAAC;IAC3B,IAAI;MACJ,OAAO,MAAMP,KAAK,CAACQ,GAAG,CAAE,mBAAkBY,IAAK,EAAC,CAAC,CAChDX,IAAI,CAACC,IAAI,IAAI;QACVH,QAAQ,CAAC;UACLI,IAAI,EAAEP,WAAW;UACjBQ,OAAO,EAAEF,IAAI,CAACG;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAChB,OAAOP,QAAQ,CAAC;QACdI,IAAI,EAAEV,KAAK;QACXW,OAAO,EAAEE,KAAK,CAACO,QAAQ,CAACR,IAAI,CAACS;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;AACL;AAAC;AAGD,OAAO,SAASC,OAAO,CAACC,EAAE,EAAC;EACvB,IAAI;IACJ,OAAO,gBAAejB,QAAQ,EAAC;MAC3B,OAAO,MAAMP,KAAK,CAACQ,GAAG,CAAE,cAAagB,EAAG,EAAC,CAAC,CACzCf,IAAI,CAACC,IAAI,IAAI;QACVH,QAAQ,CAAC;UACLI,IAAI,EAAER,SAAS;UACfS,OAAO,EAAEF,IAAI,CAACG;QAClB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;EACD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ;AAAC;AAGD,OAAO,SAASW,YAAY,CAACC,KAAK,EAAE;EAChC,OAAO,kBAAkB;IACrB,OAAO,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,aAAa,EAAED,KAAK,CAAC;EACjD,CAAC;AACL;AAAC"},"metadata":{},"sourceType":"module"}