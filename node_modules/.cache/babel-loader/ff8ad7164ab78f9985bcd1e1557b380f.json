{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Gamer/Desktop/Countries_Frontend/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/Gamer/Desktop/Countries_Frontend/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{ERROR,ORDER_BY,GET_COUNTRIES,GET_ACTIVITIES,FILTER_ACT,FILTER_CONTINENT,GET_BY_NAME,GET_BY_ID,SET_ERROR}from\"../actions/constantes\";var initialState={allCountries:[],backupCountries:[],activities:[],detail:[],error:''};export default function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_COUNTRIES:return _objectSpread(_objectSpread({},state),{},{allCountries:action.payload,backupCountries:action.payload});case GET_BY_NAME:return _objectSpread(_objectSpread({},state),{},{allCountries:action.payload});case GET_BY_ID:return _objectSpread(_objectSpread({},state),{},{detail:action.payload});case GET_ACTIVITIES:return _objectSpread(_objectSpread({},state),{},{activities:action.payload});case ORDER_BY:if(action.payload==='A-Z'){return _objectSpread(_objectSpread({},state),{},{allCountries:_toConsumableArray(state.allCountries).sort(function(prev,next){if(prev.name>next.name)return 1;if(prev.name<next.name)return-1;return 0;})});};if(action.payload==='Z-A'){return _objectSpread(_objectSpread({},state),{},{allCountries:_toConsumableArray(state.allCountries).sort(function(prev,next){if(prev.name>next.name)return-1;if(prev.name<next.name)return 1;return 0;})});};if(action.payload==='minPop'){return _objectSpread(_objectSpread({},state),{},{allCountries:_toConsumableArray(state.allCountries).sort(function(prev,next){return prev.population-next.population;})});};if(action.payload==='maxPop'){return _objectSpread(_objectSpread({},state),{},{allCountries:_toConsumableArray(state.allCountries).sort(function(prev,next){return next.population-prev.population;})});};return _objectSpread(_objectSpread({},state),{},{allCountries:state.backupCountries});case FILTER_ACT:var acts=state.activities;var filter=acts.length&&action.payload==='All'?state.backupCountries.filter(function(c){return c.activities.length>0;}):state.backupCountries.filter(function(c){return c.activities.find(function(el){return el.name===action.payload;});});if(filter.length>0){return _objectSpread(_objectSpread({},state),{},{allCountries:filter});};return _objectSpread(_objectSpread({},state),{},{allCountries:state.backupCountries});case FILTER_CONTINENT:var conts=state.backupCountries;conts=conts&&action.payload==='All'?conts:conts.filter(function(el){return el.continent===action.payload;});return _objectSpread(_objectSpread({},state),{},{allCountries:conts});case ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};","map":{"version":3,"names":["ERROR","ORDER_BY","GET_COUNTRIES","GET_ACTIVITIES","FILTER_ACT","FILTER_CONTINENT","GET_BY_NAME","GET_BY_ID","SET_ERROR","initialState","allCountries","backupCountries","activities","detail","error","rootReducer","state","action","type","payload","sort","prev","next","name","population","acts","filter","length","c","find","el","conts","continent"],"sources":["C:/Users/Gamer/Desktop/Countries_Frontend/client/src/Redux/reducer/reducer.js"],"sourcesContent":["import { ERROR, ORDER_BY, GET_COUNTRIES, GET_ACTIVITIES, FILTER_ACT, FILTER_CONTINENT, GET_BY_NAME, GET_BY_ID, SET_ERROR } from \"../actions/constantes\";\r\n\r\nlet initialState = {\r\nallCountries: [],\r\nbackupCountries: [],\r\nactivities: [],\r\ndetail: [],\r\nerror: ''\r\n};\r\n\r\n\r\nexport default function rootReducer(state = initialState, action){\r\n    switch(action.type){\r\n        \r\n        case GET_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                allCountries: action.payload,\r\n                backupCountries: action.payload\r\n            };\r\n            \r\n        case GET_BY_NAME:\r\n\r\n            return {\r\n                ...state,\r\n                allCountries: action.payload\r\n            };\r\n                \r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                detail: action.payload\r\n            };\r\n\r\n        case GET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload\r\n            };\r\n\r\n        case ORDER_BY:\r\n            \r\n            if(action.payload === 'A-Z'){\r\n                return {\r\n                    ...state, \r\n                    allCountries: [...state.allCountries].sort((prev, next) => {\r\n                    if(prev.name > next.name) return 1\r\n                    if(prev.name < next.name) return -1\r\n                    return 0\r\n                })}\r\n            };\r\n            \r\n            if(action.payload === 'Z-A'){\r\n                return {\r\n                    ...state, \r\n                    allCountries: [...state.allCountries].sort((prev, next) => {\r\n                    if(prev.name > next.name) return -1\r\n                    if(prev.name < next.name) return 1\r\n                    return 0\r\n                })}\r\n            };\r\n\r\n            if(action.payload === 'minPop'){\r\n                return {\r\n                    ...state,\r\n                    allCountries: [...state.allCountries].sort((prev,next) => prev.population - next.population)\r\n                    }\r\n            };\r\n                          \r\n            if(action.payload === 'maxPop'){\r\n                return {\r\n                    ...state,\r\n                    allCountries: [...state.allCountries].sort((prev,next) => next.population - prev.population)\r\n                        }\r\n            };\r\n\r\n                return {\r\n                    ...state,\r\n                    allCountries: state.backupCountries\r\n            };\r\n\r\n        case FILTER_ACT:\r\n            let acts = state.activities;\r\n\r\n            let filter = acts.length && action.payload === 'All' ? state.backupCountries.filter(c => c.activities.length > 0) : state.backupCountries.filter(c => c.activities.find(el => el.name === action.payload));\r\n\r\n            if(filter.length > 0){\r\n\r\n                return {\r\n                    ...state,\r\n                    allCountries: filter\r\n                };\r\n            };\r\n            \r\n            return {\r\n                ...state,\r\n                allCountries: state.backupCountries\r\n            };\r\n            \r\n\r\n        case FILTER_CONTINENT:\r\n                let conts = state.backupCountries;\r\n\r\n                conts = conts && action.payload === 'All' ? conts : conts.filter(el => el.continent === action.payload);\r\n                \r\n            return {\r\n                ...state,\r\n                allCountries: conts\r\n            };\r\n        \r\n        case ERROR:\r\n\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default: return state;\r\n    }\r\n};\r\n"],"mappings":"mRAAA,OAASA,KAAK,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,cAAc,CAAEC,UAAU,CAAEC,gBAAgB,CAAEC,WAAW,CAAEC,SAAS,CAAEC,SAAS,KAAQ,uBAAuB,CAEvJ,GAAIC,aAAY,CAAG,CACnBC,YAAY,CAAE,EAAE,CAChBC,eAAe,CAAE,EAAE,CACnBC,UAAU,CAAE,EAAE,CACdC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,EACP,CAAC,CAGD,cAAe,SAASC,YAAW,EAA8B,IAA7BC,MAAK,2DAAGP,YAAY,IAAEQ,OAAM,2CAC5D,OAAOA,MAAM,CAACC,IAAI,EAEd,IAAKhB,cAAa,CACd,sCACOc,KAAK,MACRN,YAAY,CAAEO,MAAM,CAACE,OAAO,CAC5BR,eAAe,CAAEM,MAAM,CAACE,OAAO,GAGvC,IAAKb,YAAW,CAEZ,sCACOU,KAAK,MACRN,YAAY,CAAEO,MAAM,CAACE,OAAO,GAGpC,IAAKZ,UAAS,CACV,sCACOS,KAAK,MACRH,MAAM,CAAEI,MAAM,CAACE,OAAO,GAG9B,IAAKhB,eAAc,CACf,sCACOa,KAAK,MACRJ,UAAU,CAAEK,MAAM,CAACE,OAAO,GAGlC,IAAKlB,SAAQ,CAET,GAAGgB,MAAM,CAACE,OAAO,GAAK,KAAK,CAAC,CACxB,sCACOH,KAAK,MACRN,YAAY,CAAE,mBAAIM,KAAK,CAACN,YAAY,EAAEU,IAAI,CAAC,SAACC,IAAI,CAAEC,IAAI,CAAK,CAC3D,GAAGD,IAAI,CAACE,IAAI,CAAGD,IAAI,CAACC,IAAI,CAAE,MAAO,EAAC,CAClC,GAAGF,IAAI,CAACE,IAAI,CAAGD,IAAI,CAACC,IAAI,CAAE,MAAO,CAAC,CAAC,CACnC,MAAO,EAAC,CACZ,CAAC,CAAC,GACN,CAAC,CAED,GAAGN,MAAM,CAACE,OAAO,GAAK,KAAK,CAAC,CACxB,sCACOH,KAAK,MACRN,YAAY,CAAE,mBAAIM,KAAK,CAACN,YAAY,EAAEU,IAAI,CAAC,SAACC,IAAI,CAAEC,IAAI,CAAK,CAC3D,GAAGD,IAAI,CAACE,IAAI,CAAGD,IAAI,CAACC,IAAI,CAAE,MAAO,CAAC,CAAC,CACnC,GAAGF,IAAI,CAACE,IAAI,CAAGD,IAAI,CAACC,IAAI,CAAE,MAAO,EAAC,CAClC,MAAO,EAAC,CACZ,CAAC,CAAC,GACN,CAAC,CAED,GAAGN,MAAM,CAACE,OAAO,GAAK,QAAQ,CAAC,CAC3B,sCACOH,KAAK,MACRN,YAAY,CAAE,mBAAIM,KAAK,CAACN,YAAY,EAAEU,IAAI,CAAC,SAACC,IAAI,CAACC,IAAI,QAAKD,KAAI,CAACG,UAAU,CAAGF,IAAI,CAACE,UAAU,GAAC,GAEpG,CAAC,CAED,GAAGP,MAAM,CAACE,OAAO,GAAK,QAAQ,CAAC,CAC3B,sCACOH,KAAK,MACRN,YAAY,CAAE,mBAAIM,KAAK,CAACN,YAAY,EAAEU,IAAI,CAAC,SAACC,IAAI,CAACC,IAAI,QAAKA,KAAI,CAACE,UAAU,CAAGH,IAAI,CAACG,UAAU,GAAC,GAEpG,CAAC,CAEG,sCACOR,KAAK,MACRN,YAAY,CAAEM,KAAK,CAACL,eAAe,GAG/C,IAAKP,WAAU,CACX,GAAIqB,KAAI,CAAGT,KAAK,CAACJ,UAAU,CAE3B,GAAIc,OAAM,CAAGD,IAAI,CAACE,MAAM,EAAIV,MAAM,CAACE,OAAO,GAAK,KAAK,CAAGH,KAAK,CAACL,eAAe,CAACe,MAAM,CAAC,SAAAE,CAAC,QAAIA,EAAC,CAAChB,UAAU,CAACe,MAAM,CAAG,CAAC,GAAC,CAAGX,KAAK,CAACL,eAAe,CAACe,MAAM,CAAC,SAAAE,CAAC,QAAIA,EAAC,CAAChB,UAAU,CAACiB,IAAI,CAAC,SAAAC,EAAE,QAAIA,GAAE,CAACP,IAAI,GAAKN,MAAM,CAACE,OAAO,GAAC,GAAC,CAE1M,GAAGO,MAAM,CAACC,MAAM,CAAG,CAAC,CAAC,CAEjB,sCACOX,KAAK,MACRN,YAAY,CAAEgB,MAAM,GAE5B,CAAC,CAED,sCACOV,KAAK,MACRN,YAAY,CAAEM,KAAK,CAACL,eAAe,GAI3C,IAAKN,iBAAgB,CACb,GAAI0B,MAAK,CAAGf,KAAK,CAACL,eAAe,CAEjCoB,KAAK,CAAGA,KAAK,EAAId,MAAM,CAACE,OAAO,GAAK,KAAK,CAAGY,KAAK,CAAGA,KAAK,CAACL,MAAM,CAAC,SAAAI,EAAE,QAAIA,GAAE,CAACE,SAAS,GAAKf,MAAM,CAACE,OAAO,GAAC,CAE3G,sCACOH,KAAK,MACRN,YAAY,CAAEqB,KAAK,GAG3B,IAAK/B,MAAK,CAEN,sCACOgB,KAAK,MACRF,KAAK,CAAEG,MAAM,CAACE,OAAO,GAG7B,IAAKX,UAAS,CACV,sCACOQ,KAAK,MACRF,KAAK,CAAEG,MAAM,CAACE,OAAO,GAI7B,QAAS,MAAOH,MAAK,CAAC,CAE9B,CAAC"},"metadata":{},"sourceType":"module"}